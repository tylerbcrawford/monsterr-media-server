version: '3.8'

x-common-env: &common-env
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TIMEZONE}

x-common-networks: &common-networks
  networks:
    - proxy

services:
  # Core Infrastructure (Always enabled)
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt
    <<: *common-networks
    profiles: ["core"]

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    restart: unless-stopped
    volumes:
      - ./authelia/config:/config
      - ./authelia:/etc/authelia
      - ./npm/letsencrypt:/etc/letsencrypt:ro
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - redis
    <<: *common-networks
    profiles: ["core"]

  redis:
    image: redis:latest
    container_name: authelia-redis
    restart: unless-stopped
    <<: *common-networks
    profiles: ["core"]

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./fail2ban/data:/data
    network_mode: host
    profiles: ["core"]

  # Media Services
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      <<: *common-env
      VERSION: docker
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
    volumes:
      - ./plex/config:/config
      - ./plex/transcode:/transcode
      - ./media:/data
    profiles: ["media"]

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./sonarr/config:/config
      - ./media/tv:/tv
      - ./downloads:/downloads
    <<: *common-networks
    depends_on:
      - qbittorrentvpn
      - prowlarr
    profiles: ["media"]

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./radarr/config:/config
      - ./media/movies:/movies
      - ./downloads:/downloads
    <<: *common-networks
    depends_on:
      - qbittorrentvpn
      - prowlarr
    profiles: ["media"]

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./lidarr/config:/config
      - ./media/music:/music
      - ./downloads:/downloads
    <<: *common-networks
    depends_on:
      - qbittorrentvpn
      - prowlarr
    profiles: ["media"]

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./bazarr/config:/config
      - ./media/movies:/movies
      - ./media/tv:/tv
    <<: *common-networks
    depends_on:
      - sonarr
      - radarr
    profiles: ["media"]

  # Download Management
  qbittorrentvpn:
    image: ghcr.io/hotio/qbittorrent:latest
    container_name: qbittorrentvpn
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      <<: *common-env
      UMASK: "002"
      VPN_ENABLED: "yes"
      VPN_TYPE: custom
      VPN_PROV: custom
      VPN_CLIENT: openvpn
      VPN_CONFIG_FILE: /config/openvpn/client.ovpn
      VPN_USERNAME: ${VPN_USERNAME}
      VPN_PASSWORD: ${VPN_PASSWORD}
      LAN: 192.168.1.0/24
    volumes:
      - ./qbittorrentvpn/config:/config
      - ./downloads:/downloads
    ports:
      - '8080:8080'
    <<: *common-networks
    profiles: ["downloads"]

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./prowlarr/config:/config
    <<: *common-networks
    profiles: ["downloads"]

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./nzbget/config:/config
      - ./downloads:/downloads
    <<: *common-networks
    depends_on:
      - vpn
    profiles: ["downloads"]

  vpn:
    image: dperson/openvpn-client
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./vpn/config:/vpn
    command: '-f "" -r 192.168.1.0/24 -d'
    <<: *common-networks
    profiles: ["downloads"]

  # Book Management
  readarr:
    image: lscr.io/linuxserver/readarr:latest
    container_name: readarr
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./readarr/config:/config
      - ./media/books:/books
      - ./downloads:/downloads
    <<: *common-networks
    depends_on:
      - qbittorrentvpn
      - prowlarr
    profiles: ["books"]

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./audiobookshelf/config:/config
      - ./media/audiobooks:/audiobooks
      - ./media/podcasts:/podcasts
    ports:
      - '13378:80'
    <<: *common-networks
    profiles: ["books"]

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./calibre-web/config:/config
      - ./media/ebooks:/books
    <<: *common-networks
    profiles: ["books"]

  # Monitoring & Management
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    <<: *common-networks
    profiles: ["monitoring"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./grafana/data:/var/lib/grafana
    ports:
      - '3000:3000'
    <<: *common-networks
    depends_on:
      - prometheus
    profiles: ["monitoring"]

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    environment:
      <<: *common-env
    volumes:
      - ./tautulli/config:/config
    <<: *common-networks
    depends_on:
      - plex
    profiles: ["monitoring"]

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    <<: *common-networks
    profiles: ["monitoring"]

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    <<: *common-networks
    profiles: ["monitoring"]

networks:
  proxy:
    driver: bridge
